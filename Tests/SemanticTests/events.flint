// RUN: %flintc %s --verify

contract EventTest {
  var eventA: Event<Int, Bool, Address>
}

EventTest :: (any) {
  public init() {}

  func foo(c: Address) {
    eventA(3, true, c)

    eventA(true, false, c) // expected-error {{Cannot convert expression of type 'Bool' to expected argument type 'Int'}}



    eventA(true, 3, c) // expected-error {{Cannot convert expression of type 'Bool' to expected argument type 'Int'}}
                       // expected-error@-1 {{Cannot convert expression of type 'Int' to expected argument type 'Bool'}}

    eventA(true) // expected-error {{Function 'eventA' is not in scope or cannot be called using the caller capability 'any'}}
  }
}
