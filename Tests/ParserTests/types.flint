// RUN: %flintc %s --dump-ast | %FileCheck %s --prefix CHECK-AST

// CHECK-AST: ContractDeclaration
// CHECK-AST:  identifier "Foo"
contract Foo {

// CHECK-AST: VariableDeclaration
// CHECK-AST:  FixedSizeArrayType
// CHECK-AST:   built-in type Int
// CHECK-AST:   size 16
  var array: Int[16] = []

// CHECK-AST: VariableDeclaration
// CHECK-AST:  identifier "dictionary"
// CHECK-AST:    DictionaryType
// CHECK-AST:      built-in type Address
// CHECK-AST:      built-in type Int
// CHECK-AST:   DictionaryLiteral
  var dictionary: [Address: Int] = [:]

// CHECK-AST: VariableDeclaration
// CHECK-AST:   identifier "value"
// CHECK-AST:   built-in type Int
  var value: Int = 0

// CHECK-AST: VariableDeclaration
// CHECK-AST:   identifier "s"
// CHECK-AST:   user-defined type S
// CHECK-AST:   FunctionCall
// CHECK-AST:     identifier "S"
// CHECK-AST:     literal 0
  var s: S = S(0)

// CHECK-AST: VariableDeclaration
// CHECK-AST:   identifier "assignedValue"
// CHECK-AST:   built-in type Int
// CHECK-AST:   literal 2
  var assignedValue: Int = 2
}

Foo :: (any) {
// CHECK-AST: SpecialDeclaration
// CHECK-AST:   public
  public init() {}

// CHECK-AST: SpecialDeclaration
// CHECK-AST: Parameter
// CHECK-AST:   identifier "assignedValue"
// CHECK-AST:   built-in type Int
  init(assignedValue: Int) {
    self.assignedValue = assignedValue
  }
}

// CHECK-AST: TopLevelDeclaration
// CHECK-AST: StructDeclaration
struct S {
  init (a: Int) {}
}
