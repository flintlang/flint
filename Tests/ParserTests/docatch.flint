// RUN: %flintc %s --dump-ast | %FileCheck %s --prefix CHECK-AST

contract Foo {
  var arr: [Int] = []
}

Foo :: (any) {
  public init() {}

  func foo() -> Int {
    // CHECK-AST: DoCatchStatement
    // CHECK-AST:    VariableDeclaration
    // CHECK-AST:      let
    // CHECK-AST:      identifier "x"
    // CHECK-AST:      built-in type Int
    // CHECK-AST:    =
    // CHECK-AST:      literal 3
    // CHECK-AST:    VariableDeclaration
    // CHECK-AST:      let
    // CHECK-AST:      identifier "x"
    // CHECK-AST:      built-in type Int
    // CHECK-AST:    =
    // CHECK-AST:      literal 4
    // CHECK-AST:    Expression
    do {
      let x: Int = 3
    } catch is Error {
      let x: Int = 4 // x is in a different block
    }

    return 0;

  }
}
