// RUN: %ethlc %s --dump-ast | %FileCheck %s --prefix CHECK-AST

contract Wallet {
  var owner: Address
  var contents: Ether
}

Wallet :: (any) {
  public func factorial(n: Int) -> Int {

// CHECK-AST: IfStatement
// CHECK-AST:  BinaryExpression
// CHECK-AST:    identifier "n"
// CHECK-AST:    <
// CHECK-AST:    literal 2
// CHECK-AST:  ReturnStatement
// CHECK-AST:    literal 1
    if (n < 2) { return 1 }

// CHECK-AST:  ReturnStatement
// CHECK-AST:    BinaryExpression
// CHECK-AST:      identifier "n"
// CHECK-AST:      *
// CHECK-AST:      FunctionCall
// CHECK-AST:        identifier "factorial"
// CHECK-AST:          BinaryExpression
// CHECK-AST:            n
// CHECK-AST:            -
// CHECK-AST:            1
    return n * factorial(n - 1)
  }
}
